name: Build

on:
  push:
    branches: ["*"]
    tags-ignore: ["v*"]
  pull_request:
    branches: ["main"]

jobs:
  build-native:
    strategy:
      matrix:
        rid:
          [
            linux-arm64,
            linux-x64,
            win-x64,
            win-x86,
            win-arm64,
            osx-x64,
            osx-arm64,
          ]
        include:
          - { rid: linux-arm64, os: ubuntu-latest }
          - { rid: linux-x64, os: ubuntu-latest }
          - { rid: osx-x64, os: macos-latest }
          - { rid: osx-arm64, os: macos-latest }
          - { rid: win-x64, os: windows-latest, cross-arch: x64 }
          - { rid: win-x86, os: windows-latest, cross-arch: amd64_x86 }
          - { rid: win-arm64, os: windows-latest, cross-arch: amd64_arm64 }
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"
          fetch-depth: 0

      - name: Install .NET Sdk
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json

      - name: Install gitversions
        run: |
          dotnet tool install --global GitVersion.Tool

      - uses: nuget/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NUGET_API_KEY }}
          nuget-version: "latest"

      - name: Install ninja
        run: pip3 install ninja

      - uses: ilammy/msvc-dev-cmd@v1
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          arch: ${{ matrix.cross-arch }}

      - name: Install pnpm tree-sitter-cli node-gyp
        run: npm install pnpm tree-sitter-cli node-gyp -g

      - name: Build tree-sitter
        env:
          RID: ${{ matrix.rid }}
        run: |
          ./build.ps1
        shell: pwsh

      - name: Run nuget pack
        run: |
          Get-ChildItem -Recurse -Filter *.nuspec -File | Foreach-Object { nuget pack $_.FullName }
        shell: pwsh

      - uses: actions/upload-artifact@v3
        with:
          name: Nupkgs
          path: "*.nupkg"

  build-managed:
    needs: build-native
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"
          fetch-depth: 0

      - uses: actions/download-artifact@v3
        with:
          name: Nupkgs
          path: ./nupkgs

      - name: Install .NET Sdk
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json

      - name: Do release
        run: |
          dotnet tool install --global dotnet-releaser
          dotnet-releaser build ./dotnet-releaser.toml

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: "artifacts-dotnet-releaser"
